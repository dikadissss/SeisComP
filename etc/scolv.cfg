# List of plugins loaded at startup. Separate multiple names by comma. Add
# ${plugins} to consider all previously read values.
plugins = ${plugins}, hypo71, locnll

# Define the username to be used. The length is maybe limited by the messaging
# system used. By default, the module name (name of the executable) is used but
# sometimes it exceeds the 10 character limit and access is denied. To prevent
# errors set a different username. An empty username will let the system to
# generate one.
connection.username = scolv

# PublicID creation pattern for an origin created by NonLinLoc.
NonLinLoc.publicID = NLL.@time/%Y%m%d%H%M%S.%f@.@id@

# Defines the output path for all native NonLinLoc input and output files.
NonLinLoc.outputPath = @DATADIR@/nll/data/output/

# The default pick error in seconds passed to NonLinLoc if a SeisComP pick
# object does not provide pick time uncertainties.
NonLinLoc.defaultPickError = 0.1

# Defines a list of active profiles to be used by the plugin.
NonLinLoc.profiles = ak135, iasp91, jawa3d

# earthModelID that is stored in the created origin.
NonLinLoc.profile.ak135.earthModelID = ak135

# methodID that is stored in the created origin.
NonLinLoc.profile.ak135.methodID = NonLinLoc

# Path to travel time tables (grids).
NonLinLoc.profile.ak135.tablePath = @DATADIR@/nll/data/ak135/ak135

# Format of the station name used to select the right travel time table (grid)
# file for a station. By default only the station code is used (e.g.
# tablePath.P.@STA@.time.*), but that doesn't allow to distinguish between
# multiple network codes or location codes that use the same station code. To
# overcome this limitation this parameter could be set in a more general way,
# for example @NET@_@STA@_@LOC@. In this way NonLinLoc will look for travel
# time table (grid) files of the form: tablePath.P.@NET@_@STA@_@LOC@.time.*
# Where @NET@ @STA@ @LOC@ are just placeholder for the actual codes
NonLinLoc.profile.ak135.stationNameFormat = @NET@_@STA@_@LOC@

# Control file of the current profile. If not set, the default control file
# will be used instead.
NonLinLoc.profile.ak135.controlFile = @DATADIR@/nll/data/NLL.ak135.conf

# earthModelID that is stored in the created origin.
NonLinLoc.profile.iasp91.earthModelID = iasp91

# methodID that is stored in the created origin.
NonLinLoc.profile.iasp91.methodID = NonLinLoc

# Path to travel time tables (grids).
NonLinLoc.profile.iasp91.tablePath = @DATADIR@/nll/data/iasp91/iasp91

# Format of the station name used to select the right travel time table (grid)
# file for a station. By default only the station code is used (e.g.
# tablePath.P.@STA@.time.*), but that doesn't allow to distinguish between
# multiple network codes or location codes that use the same station code. To
# overcome this limitation this parameter could be set in a more general way,
# for example @NET@_@STA@_@LOC@. In this way NonLinLoc will look for travel
# time table (grid) files of the form: tablePath.P.@NET@_@STA@_@LOC@.time.*
# Where @NET@ @STA@ @LOC@ are just placeholder for the actual codes
NonLinLoc.profile.iasp91.stationNameFormat = @NET@_@STA@_@LOC@

# Control file of the current profile. If not set, the default control file
# will be used instead.
NonLinLoc.profile.iasp91.controlFile = @DATADIR@/nll/data/NLL.iasp91.conf

# Transformation type of the configured region. Supported are SIMPLE and
# GLOBAL.
# Default: GLOBAL is assumed.
NonLinLoc.profile.iasp91.transform = GLOBAL

# earthModelID that is stored in the created origin.
NonLinLoc.profile.jawa3d.earthModelID = jawa3d

# methodID that is stored in the created origin.
NonLinLoc.profile.jawa3d.methodID = NonLinLoc

# Path to travel time tables (grids).
NonLinLoc.profile.jawa3d.tablePath = @DATADIR@/nll/data/jawa3d/jawa3d

# Format of the station name used to select the right travel time table (grid)
# file for a station. By default only the station code is used (e.g.
# tablePath.P.@STA@.time.*), but that doesn't allow to distinguish between
# multiple network codes or location codes that use the same station code. To
# overcome this limitation this parameter could be set in a more general way,
# for example @NET@_@STA@_@LOC@. In this way NonLinLoc will look for travel
# time table (grid) files of the form: tablePath.P.@NET@_@STA@_@LOC@.time.*
# Where @NET@ @STA@ @LOC@ are just placeholder for the actual codes
NonLinLoc.profile.jawa3d.stationNameFormat = @NET@_@STA@_@LOC@

# Control file of the current profile. If not set, the default control file
# will be used instead.
NonLinLoc.profile.jawa3d.controlFile = @DATADIR@/nll/data/NLL.jawa3d.conf

# Transformation type of the configured region. Supported are SIMPLE and
# GLOBAL.
# Default: GLOBAL is assumed.
NonLinLoc.profile.jawa3d.transform = SIMPLE

# Defines the 4 corner values of the epicentral region for selecting the
# profile. The original epicentre must be within the region.
# If transform is GLOBAL: min_lat, min_lon, max_lat, max_lon. The values define
# the geographic corner coordinates. Unit is degree.
# If transform is SIMPLE: xmin, ymin, xmax, ymax. The values define the region
# relative to the configured origin. Unit is km.
NonLinLoc.profile.jawa3d.region = 100, 100, 100, 100

# Only used for transformation SIMPLE. Expects 2 values: latitude, longitude.
# The value define the geographic origin of the area spanned by region. Unit is
# degree.
NonLinLoc.profile.jawa3d.origin = -7.54, 105.95

# Only used for transformation SIMPLE. Defines the rotation around the origin
# of the defined region.
NonLinLoc.profile.jawa3d.rotation = 0.0

# Defines a list of available LOCSAT travel-time tables.
LOCSAT.profiles = iasp91, tab, ak135, prem

# Specified the location and the structure of the map tiles to be used. This
# path is composed of zero or more directives and must include at least one
# conversion specification which starts with is introduced by the character %
# followed by a conversion specifier. Valid specifiers are s (replaced by tile
# ID), l (tile level), c (tile column) and r (tile row). An example for using
# the OpenStreetMap file structure is /path/to/maps/%l/%c/%r.png.
map.location = /home/sysop/PUSAT/data-seiscomp/lcr-512/%l/%c/%r.png

# Projection of the map tiles. Supported formats are: rectangular and mercator.
map.format = mercator

# Configures the default filters selectable in manual picker. The entry with a
# leading "@" is selected as default filter.
picker.filters = "BP 0.1 - 1 Hz  3rd order;BW(3,0.1,1)",\
                 "BP 0.1 - 2 Hz  3rd order;BW(3,0.1,2)",\
                 "BP 0.4 - 1 Hz  3rd order;BW(3,0.4,1)",\
                 "@BP 0.7 - 2 Hz  3rd order;BW(3,0.7,2)",\
                 "BP 1 - 3 Hz  3rd order;BW(3,1.0,3)",\
                 "BP 2 - 4 Hz  3rd order;BW(3,2.0,4)",\
                 "BP 3 - 6 Hz  3rd order;BW(3,3.0,6)",\
                 "BP 4 - 8 Hz  3rd order;BW(3,4.0,8)",\
                 "BP 1 - 5 Hz  3rd order;BW(3,1.0,5)",\
                 "BP 1.5 - 15 Hz  2rd order;BW(2,1.5,15)",\
                 "BP 0.7 - 2 Hz + STA/LTA(1,50);RMHP(10)->ITAPER(30)->BW(3,0.7,2)->STALTA(1,50)"

# Name of the custom column to be shown in the column header.
eventlist.customColumn.name = CC

# ID of the origin comment to look up.
eventlist.customColumn.originCommentID = scdetectResultCCC

# ID of the event comment to look up.
# originCommentID, if configured, takes priority.
eventlist.customColumn.eventCommentID = scdetectResultCCC

# Default value to display if the specified origin or event comment id was not
# found.
eventlist.customColumn.default = ""

# Temporary file used by Hypo71 to store calculation logs.
hypo71.logFile = @DATADIR@/hypo71/HYPO71.LOG

# Temporary file to write Hypo71 input data to.
hypo71.inputFile = @DATADIR@/hypo71/HYPO71.INP

# Temporary output file to read Hypo71 location data from.
hypo71.outputFile = @DATADIR@/hypo71/HYPO71.PRT

# Hypo71 default profile. If no custom profile is specified, this profile will
# be used by the plugin when proceeding to a localization.
hypo71.defaultControlFile = @DATADIR@/hypo71/profiles/default.hypo71.conf

# Bash script executed when calling the Hypo71 locator plugin for locating the
# earthquake.
hypo71.hypo71ScriptFile = @DATADIR@/hypo71/run.sh

# Hypo71 profile name. Multiples names may be set. They must be separated by
# comma. Each profile can have different velocity or parameters.
hypo71.profiles = Madlazim, Koulakov, ModelA, Tectonic, crust1

# Custom patternID to use when generating origin publicID
hypo71.publicID = Hypo71.@time/%Y%m%d%H%M%S.%f@.@id@

# Profile's velocity model name.
hypo71.profile.Koulakov.earthModelID = "Koulakov Model"

# Profile's method. It is generally the locator's name (Hypo71).
hypo71.profile.Koulakov.methodID = Hypo71PC

# File containing the profile parameters.
hypo71.profile.Koulakov.controlFile = @DATADIR@/hypo71/profiles/profile.koulakov.conf

# Profile's velocity model name.
hypo71.profile.Madlazim.earthModelID = "Model Madlazim"

# Profile's method. It is generally the locator's name (Hypo71).
hypo71.profile.Madlazim.methodID = Hypo71PC

# File containing the profile parameters.
hypo71.profile.Madlazim.controlFile = @DATADIR@/hypo71/profiles/profile.madlazim.conf

# List of magnitude types to be calculated when computing magnitudes. This list
# can be altered interactively so it reflects only the default unless
# computeMagnitudesSilently is set to true. The configured types should include
# all types which are also computed by scmag in order to allow their processing
# in scolv. Otherwise scmag may add magnitudes to origins without interaction
# in scolv.
magnitudes = MLv, Mjma, Mbmkg

# A list of magnitude types to be displayed in the summary widget (F8).
visibleMagnitudes = MLv, M, Mjma, Mbmkg

# If enabled, a magnitude selection pop window will open in advance to compute
# magnitudes. The default selection reflects the configuration parameter
# "magnitudes".
olv.enableMagnitudeSelection = true

# The velocity applied to reduce travel times in the "MoveOut" plot of the
# Location tab.
olv.Pvel = 6

# Sets the drawing of lines in the map connecting the station with the event.
olv.drawMapLines = true

# Sets the drawing of grid lines in the plot.
olv.drawGridLines = true

# If a locator does not populate the take off angle in its arrivals, the first
# motion plot will not show picked polarities. This option defines whether to
# compute take off angles that are not present in the arrivals or not.
olv.computeMissingTakeOffAngles = true

# The default value for adding unassociated stations in the picker.
olv.defaultAddStationsDistance = 5

# If enabled, all traces without data and arrivals are hidden in the picker.
olv.hideStationsWithoutData = false

# If enabled, all traces of disabled stations without picks are hidden.
olv.hideDisabledStations = true

# When creating an artificial origin this is the default depth used.
olv.defaultDepth = 10

# Adds advanced input parameters in artificial origin dialog.
olv.artificialOriginAdvanced = true

# Activates the button "Fix this origin as preferred solution" when committing
# with additional options. This is just the default setting and can be changed
# manually when the dialog pops up.
olv.commit.fixOrigin = true

# Activate a cross hair cursor showing the configured uncertainties when in
# picking mode.
picker.showCrossHairCursor = false

# Load all existing picks for the requested data time window.
picker.loadAllPicks = false

# If enabled, the picker will not add stations that are not configured with a
# detecStream in global bindings.
picker.ignoreUnconfiguredStations = false

# Limit the data acquisition to the number of nearest stations given by
# "picker.limitStationAcquisitionCount".
picker.limitStationAcquisition = false

# Limit the data acquisituion to the given number of the nearest stations.
# Requires to activate "picker.limitStationAcquisition".
picker.limitStationAcquisitionCount = 10

# If enabled, acceleration data is loaded for co-located stations where picked
# on velocity data.
picker.loadStrongMotion = true

# Load all three components by default. If disabled, additional components are
# fetched upon request.
picker.loadAllComponents = true

# If enabled, all three components are shown in the picker zoom trace. The
# distance is limited to what is configured in
# "picker.allComponentsMaximumDistance".
picker.showAllComponents = true

# The distance limit for the "picker.showAllComponents" flag.
picker.allComponentsMaximumDistance = 8

# If enabled, data is requested around the P pick for each stations. Otherwise
# origin time is used and the time window for all stations is the same.
picker.usePerStreamTimeWindows = true

# After picking and pushing the solution back to scolv all automatic arrivals
# are removed from a station if a manual pick exists.
picker.removeAutomaticPicksFromStationAfterManualReview = false

# After picking and pushing the solution back to scolv all automatic arrivals
# are removed from all stations regardless if a manual pick exists or not.
picker.removeAllAutomaticPicksAfterManualReview = false

# The data time span added to the left of either origin time or first arrival
# depending on the usePerStreamTimeWindows flag.
picker.preOffset = 60

# The data time span added to the right of the requested time window.
picker.postOffset = 120

# Minimum data time window length.
picker.minimumTimeWindow = 3600

# Defines the relative position of the alignment when traces are aligned at a
# phase. This value is bound to interval [0:1] where 0 is the left side and 1
# is right side of the trace window.
picker.alignmentPosition = 0.5

# Time span in seconds to be added to the left of the used amplitude time
# window.
amplitudePicker.preOffset = 300

# Time span in seconds to be added to the right of the used amplitude time
# window.
amplitudePicker.postOffset = 300

# Starts magnitude computation without user interaction if everything runs
# without errors. In case of errors a window pops up with the current state of
# processing.
olv.computeMagintudesSilently = false
